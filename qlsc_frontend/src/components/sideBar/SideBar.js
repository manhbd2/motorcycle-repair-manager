import React, { useState, useEffect } from "react";
import { connect } from "react-redux";
import { Link, withRouter } from "react-router-dom";
import * as Icons from "common/icons";
import "./sideBar.scss";
import SubMenu from "./submenu/SubMenu";
import { logout } from "../../pages/login/actions/loginAction";
import { menuLinkFull } from "utils/router.js";
import pushstate from "../../utils/pushstate";
var randomColor = require("randomcolor"); // import the script
var color = randomColor();
function SideBar(props) {
  const { showMenu, setShowMenu, user, onLogout } = props;
  const [init, setInit] = useState({
    menu: 99,
    submenu: "",
  });
  useEffect(() => {
    const url = props.history.location.pathname;
    const item = menuLinkFull.find((a) => {
      if (a.url.length > 1) {
        if (url.includes(a.url)) {
          return a;
        }
        return "";
      }
    });
    if (item) {
      const subItem =
        item.submenu.length > 0 ? item.submenu.find((a) => a.url === url) : "";
      if (subItem) {
        setInit({ ...init, menu: item.id, submenu: subItem.id });
      }
    }
  }, []);

  const onClickMoreIcon = () => {
    setTimeout(() => {
      setShowMenu(!showMenu);
    }, 50);
  };

  const handleLogout = (e) => {
    onLogout();
    pushstate(props.history, "/login");
  };

  const onSetInit = (a, b) => {
    if (a === init.menu) {
      setInit({ ...init, menu: "", submenu: b });
    } else {
      setInit({ ...init, menu: a, submenu: b });
    }
  };
  return (
    <div className={`aside ${showMenu ? "col-left" : ""}`}>
      <div className="ekko-menu-top-header">
        {!showMenu ? (
          <div className="logo">
            <svg
              width="77"
              height="24"
              viewBox="0 0 77 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9.6348 10.8059C10.6609 12.9611 11.9212 14.9675 13.4158 16.8249C14.9306 18.6826 16.3527 19.8214 17.6822 20.2414C17.6723 21.0905 17.4422 21.7449 16.992 22.2046C16.5418 22.6644 15.9022 22.8894 15.0734 22.8796C13.9817 22.8668 12.7271 22.0939 11.3096 20.5608C9.91254 19.0078 8.68945 17.2749 7.64032 15.362C6.59119 13.4491 5.86279 11.7725 5.45511 10.3322C7.46668 9.48645 9.19071 8.16216 10.6272 6.35935C12.0639 4.53632 12.7927 2.73531 12.8136 0.956317C13.6829 0.966524 14.4291 1.12692 15.0522 1.43752C15.6955 1.74835 16.0133 2.23733 16.0055 2.90445C15.9931 3.95568 15.3515 5.22192 14.0805 6.70317C12.8096 8.18443 11.3277 9.55201 9.6348 10.8059ZM5.22457 22.2181C4.57481 22.4531 3.88605 22.5663 3.15828 22.5578C2.43051 22.5492 1.79644 22.3093 1.25607 21.8379C0.735916 21.3667 0.480587 20.7269 0.490082 19.9182C0.499577 19.1096 0.618815 17.5643 0.847795 15.2822C1.07701 12.98 1.19969 11.1416 1.21583 9.76688C1.25737 6.22911 1.07798 3.42673 0.677661 1.35972C1.32742 1.12473 2.01618 1.01151 2.74395 1.02005C3.47172 1.0286 4.09568 1.26844 4.61583 1.73957C5.1562 2.21095 5.42164 2.85095 5.41214 3.65958C5.40265 4.46822 5.28329 6.02365 5.05408 8.32588C4.82509 10.6079 4.70253 12.4362 4.68639 13.8109C4.64485 17.3487 4.82424 20.1511 5.22457 22.2181ZM23.0946 22.5119C22.5948 22.6927 22.065 22.7798 21.5052 22.7732C20.9453 22.7666 20.4576 22.582 20.0419 22.2194C19.6418 21.857 19.4454 21.3648 19.4527 20.7428C19.46 20.1207 19.5517 18.932 19.7279 17.1766C19.9042 15.4057 19.9986 13.9915 20.011 12.934C20.0429 10.2127 19.9049 8.057 19.597 6.467C20.0968 6.28623 20.6266 6.19914 21.1864 6.20571C21.7463 6.21228 22.2262 6.39678 22.6264 6.75919C23.042 7.12178 23.2462 7.61409 23.2389 8.23612C23.2316 8.85815 23.1398 10.0546 22.9635 11.8256C22.7873 13.581 22.693 14.9874 22.6806 16.0448C22.6487 18.7662 22.7867 20.9219 23.0946 22.5119ZM36.9608 14.4628C36.9825 12.6123 36.6191 11.115 35.8704 9.97082C35.1375 8.81131 33.9702 8.22215 32.3685 8.20334C31.4043 8.19202 30.5454 8.49299 29.7917 9.10625C29.3641 9.75445 29.0195 10.6291 28.7577 11.7303C28.5115 12.8317 28.3825 13.88 28.3708 14.8752C28.3493 16.7102 28.7052 18.1841 29.4387 19.297C30.1722 20.4098 31.3475 20.9758 32.9648 20.9947C33.8512 21.0051 34.6096 20.6563 35.24 19.9483C36.3593 18.6706 36.9329 16.8421 36.9608 14.4628ZM32.146 23.1781C29.8756 23.1514 28.1582 22.3847 26.9939 20.878C25.8298 19.3557 25.2619 17.3816 25.2904 14.9557C25.3191 12.5142 26.0747 10.4157 27.5573 8.66009C29.0399 6.90448 30.9086 6.03991 33.1634 6.06639C35.4338 6.09305 37.151 6.8753 38.315 8.41314C39.4945 9.95116 40.0699 11.9409 40.0412 14.3824C40.0125 16.8238 39.2571 18.9068 37.7749 20.6313C36.2927 22.3558 34.4164 23.2047 32.146 23.1781ZM58.9989 7.95612L58.8371 11.8035C58.8123 13.9184 58.8522 15.8163 58.9569 17.4973C59.0617 19.1627 59.3204 20.9776 59.7328 22.9421C59.3874 23.218 58.8415 23.3515 58.095 23.3428C56.6488 23.3258 55.9331 22.6875 55.9479 21.4279C55.9601 20.386 56.0255 18.7926 56.144 16.6477C56.2781 14.503 56.3522 12.8242 56.3665 11.6112C55.5125 12.8143 54.6085 14.3045 53.6544 16.0819C52.7161 17.8439 52.2446 18.9271 52.2399 19.3314C52.2351 19.7357 52.2703 20.0472 52.3455 20.2658C52.0009 20.4795 51.5408 20.583 50.9655 20.5762C50.4056 20.5696 49.9332 20.4086 49.5481 20.093C49.1785 19.7776 48.8647 19.3462 48.6068 18.7988C48.3643 18.2516 47.9259 17.1811 47.2914 15.5873C46.6726 13.9781 46.1056 12.595 45.5904 11.438C45.1567 13.9369 44.9285 16.1505 44.9059 18.0788C44.8832 20.0071 44.9271 21.5707 45.0374 22.7695C44.5376 22.9503 44.0389 23.0378 43.5413 23.0319C42.546 23.0202 42.0543 22.5168 42.0659 21.5215C42.0749 20.7595 42.2638 19.2454 42.6325 16.979C43.017 14.6972 43.2185 12.7711 43.2369 11.2004C43.2554 9.62983 43.1871 8.15929 43.0321 6.78882C43.8744 6.58097 44.5288 6.47979 44.9953 6.48527C45.8506 6.49531 46.4224 6.8053 46.7108 7.41525C47.1658 8.40041 47.8317 9.97129 48.7084 12.1279C49.6009 14.2691 50.3281 15.9184 50.8899 17.0759C51.0493 16.7512 51.4151 16.0556 51.9876 14.9892C52.5757 13.9074 53.0609 12.9877 53.443 12.2301C53.8409 11.4572 54.2405 10.5442 54.6417 9.49135C55.0586 8.4231 55.3261 7.49307 55.4443 6.70127C56.0059 6.55234 56.5511 6.48097 57.0798 6.48718C57.6241 6.49357 58.0815 6.61559 58.452 6.85323C58.8224 7.09087 59.0048 7.4585 58.9989 7.95612ZM73.2254 14.8886C73.2471 13.0381 72.8837 11.5408 72.135 10.3966C71.4021 9.23711 70.2348 8.64795 68.6331 8.62915C67.6689 8.61782 66.81 8.9188 66.0563 9.53206C65.6287 10.1803 65.2841 11.0549 65.0223 12.1561C64.7761 13.2575 64.6471 14.3058 64.6354 15.301C64.6139 17.136 64.9698 18.6099 65.7033 19.7228C66.4368 20.8356 67.6121 21.4016 69.2294 21.4205C70.1158 21.431 70.8742 21.0821 71.5046 20.3741C72.6239 19.0964 73.1975 17.2679 73.2254 14.8886ZM68.4106 23.6039C66.1402 23.5772 64.4228 22.8105 63.2585 21.3038C62.0944 19.7815 61.5265 17.8074 61.555 15.3815C61.5837 12.94 62.3393 10.8415 63.8219 9.0859C65.3045 7.33029 67.1732 6.46572 69.428 6.49219C71.6984 6.51885 73.4156 7.3011 74.5796 8.83894C75.7591 10.377 76.3345 12.3667 76.3058 14.8082C76.2771 17.2496 75.5217 19.3326 74.0395 21.0571C72.5573 22.7816 70.681 23.6305 68.4106 23.6039Z"
                fill="white"
              />
            </svg>
          </div>
        ) : (
          ""
        )}
        <a
          className="more-icons"
          onClick={() => {
            onClickMoreIcon();
          }}
        >
          <Icons.moreIcon />
        </a>
      </div>
      <SubMenu onSetInit={onSetInit} init={init} showMenu={showMenu}></SubMenu>
      <ul className="nav menu-bottom">
        <li className="user">
          <a href="#" data-toggle="dropdown">
            <span
              className="logo-user"
              style={{ textAlign: "center", background: `${color}` }}
            >
              {user && user.name && user.name.substring(0, 1)}
            </span>
            {!showMenu && <span>{(user && user.name) || "Nhân viên"}</span>}
          </a>
          <div className="dropdown-menu">
            <div className="info d-flex align-items-center">
              <div className="avatar">
                <span
                  className="logo-user"
                  style={{ textAlign: "center", background: `${color}` }}
                >
                  {user && user.name && user.name.substring(0, 1)}
                </span>
                <span className="status active" />
              </div>
              <div>
                <p>{(user && user.name) || "Nhân viên"}</p>
                <span className="status active">Đang hoạt động</span>
              </div>
            </div>
            <ul>
              <li>
                <a onClick={() => handleLogout()}>Đăng xuất</a>
              </li>
            </ul>
          </div>
        </li>
      </ul>
    </div>
  );
}
SideBar.defaultProps = {
  showMenu: "",
};
const mapStateToProps = (state) => {
  const {
    globalUI: { showMenuTopBar },
    auth: { user },
  } = state;
  const showMenu = showMenuTopBar;
  return {
    user,
  };
};
const mapDispatchToProps = (dispatch) => ({
  onLogout: () => dispatch(logout()),
});
export default withRouter(
  connect(mapStateToProps, mapDispatchToProps)(SideBar)
);
